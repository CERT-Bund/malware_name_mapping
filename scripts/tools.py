#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jun 14 11:29:14 2018

@author: sebastian
"""
import argparse
import re
import sys

from common import load_mapping

try:
    import exrex
except ImportError:
    exrex = None


def generate(expression: str, max_matches: 100):
    if exrex is None:
        print("Error: Python module exrex is needed but not available.", file=sys.stderr)
        return 2
    for ind, result in enumerate(exrex.generate(expression)):
        if ind > max_matches:
            break
        print(result)


def lookup(malware: str,
           include_malpedia: bool = False) -> int:
    match = False
    for expression, family, _ in load_mapping(include_malpedia=include_malpedia):
        if re.fullmatch(expression, malware, re.IGNORECASE):
            print('Found match %r -> %r.' % (malware, family))
            match = True
    if not match:
        print('Found no match.', file=sys.stderr)
        return 1
    return 0


def main():
    parser = argparse.ArgumentParser(prog='malware name mapping tools', description='Some useful tools.')
    subparsers = parser.add_subparsers(title='tools')
    parser_generate = subparsers.add_parser('generate', help='Generate matching expressions for a regular expression.')
    parser_generate.add_argument('-m', '--max-matches', nargs=1, default=100)
    parser_generate.add_argument('expression')
    parser_generate.set_defaults(func=generate)

    parser_lookup = subparsers.add_parser('lookup', help='Lookup a malware name.')
    parser_lookup.add_argument('malware')
    parser_lookup.add_argument('-i', '--include-malpedia',
                               default=False, action='store_true',
                               help='Include malpedia data (CC BY-NC-SA 3.0)')
    parser_lookup.set_defaults(func=lookup)

    args = parser.parse_args()
    if 'func' not in args:
        exit(parser.print_help())
    args_dict = vars(args).copy()
    del args_dict['func']
    return args.func(**args_dict)


if __name__ == "__main__":
    sys.exit(main())
